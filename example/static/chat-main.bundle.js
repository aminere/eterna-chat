webpackJsonp([1],{

/***/ "./src/css/chat.css":
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY3NzL2NoYXQuY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy9jaGF0LmNzcz83ZGY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvY3NzL2NoYXQuY3NzXG4vLyBtb2R1bGUgaWQgPSAuL3NyYy9jc3MvY2hhdC5jc3Ncbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/css/chat.css\n");

/***/ }),

/***/ "./src/js/chat.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery__ = __webpack_require__(\"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_jquery___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_jquery__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jquery_ui_ui_widgets_tabs__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widgets/tabs.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jquery_ui_ui_widgets_tabs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_jquery_ui_ui_widgets_tabs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery_ui_ui_widgets_dialog__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widgets/dialog.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_jquery_ui_ui_widgets_dialog___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_jquery_ui_ui_widgets_dialog__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_ui_ui_widgets_button__ = __webpack_require__(\"./node_modules/jquery-ui/ui/widgets/button.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_jquery_ui_ui_widgets_button___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_jquery_ui_ui_widgets_button__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery_ui_ui_position__ = __webpack_require__(\"./node_modules/jquery-ui/ui/position.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_jquery_ui_ui_position___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_jquery_ui_ui_position__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery_ui_themes_base_core_css__ = __webpack_require__(\"./node_modules/jquery-ui/themes/base/core.css\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_jquery_ui_themes_base_core_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_jquery_ui_themes_base_core_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery_ui_themes_base_tabs_css__ = __webpack_require__(\"./node_modules/jquery-ui/themes/base/tabs.css\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_jquery_ui_themes_base_tabs_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_jquery_ui_themes_base_tabs_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jquery_ui_themes_base_menu_css__ = __webpack_require__(\"./node_modules/jquery-ui/themes/base/menu.css\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_jquery_ui_themes_base_menu_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_jquery_ui_themes_base_menu_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_jquery_ui_themes_base_dialog_css__ = __webpack_require__(\"./node_modules/jquery-ui/themes/base/dialog.css\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_jquery_ui_themes_base_dialog_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_jquery_ui_themes_base_dialog_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_jquery_ui_themes_base_button_css__ = __webpack_require__(\"./node_modules/jquery-ui/themes/base/button.css\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_jquery_ui_themes_base_button_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_9_jquery_ui_themes_base_button_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_malihu_custom_scrollbar_plugin__ = __webpack_require__(\"./node_modules/malihu-custom-scrollbar-plugin/src/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_ui_contextmenu__ = __webpack_require__(\"./node_modules/ui-contextmenu/jquery.ui-contextmenu.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_ui_contextmenu___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_ui_contextmenu__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_markdown_it__ = __webpack_require__(\"./node_modules/markdown-it/index.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_markdown_it___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_12_markdown_it__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_sockjs_client__ = __webpack_require__(\"./node_modules/sockjs-client/lib/entry.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_sockjs_client___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_13_sockjs_client__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__polyfills__ = __webpack_require__(\"./src/js/polyfills.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__polyfills___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_14__polyfills__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__define_user__ = __webpack_require__(\"./src/js/define-user.js\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__css_chat_css__ = __webpack_require__(\"./src/css/chat.css\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__css_chat_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_16__css_chat_css__);\n// jQuery and jQuery-ui\n\n\n\n\n\n\n\n\n\n\n\n// mCustomScrollbar\n\nObject(__WEBPACK_IMPORTED_MODULE_10_malihu_custom_scrollbar_plugin__[\"a\" /* default */])(__WEBPACK_IMPORTED_MODULE_0_jquery___default.a);\n\n// Context Menu\n\n\nwindow.$ = window.jQuery = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a;\n\n// Markdown-it\n\nvar md = new __WEBPACK_IMPORTED_MODULE_12_markdown_it___default.a({\n    linkify: true,\n    typographer: true\n}).disable('image');\n// Via https://github.com/markdown-it/markdown-it/blob/e6f19eab4204122e85e4a342e0c1c8486ff40c2d/docs/architecture.md\nvar defaultRender = md.renderer.rules.link_open || function(tokens, idx, options, env, self) {\n  return self.renderToken(tokens, idx, options);\n};\nmd.renderer.rules.link_open = function(tokens, idx, options, env, self) {\n  // If you are sure other plugins can't add `target` - drop check below\n  var aIndex = tokens[idx].attrIndex('target');\n\n  if (aIndex < 0) {\n    tokens[idx].attrPush(['target', '_blank']); // add new attribute\n  } else {\n    tokens[idx].attrs[aIndex][1] = '_blank';    // replace value of existing attr\n  }\n\n  // pass token to default renderer.\n  return defaultRender(tokens, idx, options, env, self);\n};\n\n// Create an instance of markdown-it with no rules enabled, using it just to strip/sanitize HTML\nvar mdSanitizer = new __WEBPACK_IMPORTED_MODULE_12_markdown_it___default.a('zero');\n\n// SockJS\n\n\n// Our assets\n\n\n\n\n// Username, if not logged in \"Annonymous\"\nvar USERNAME = __WEBPACK_IMPORTED_MODULE_15__define_user__[\"b\" /* CURRENT_USER */] ? __WEBPACK_IMPORTED_MODULE_15__define_user__[\"b\" /* CURRENT_USER */].name : \"Anonymous\";\n// User ID, if not logged in \"0\"\nvar UID = __WEBPACK_IMPORTED_MODULE_15__define_user__[\"b\" /* CURRENT_USER */] ? __WEBPACK_IMPORTED_MODULE_15__define_user__[\"b\" /* CURRENT_USER */].uid : 0;\n// Replace invalid IRC nick characters with \"-\" (or _ if first char), limit its length (max is 32, minux 2 for __ and minus a max of 3 for ^##, then subtract the UID length), and add UID and initial connection number\nvar NICK = USERNAME.replace(/^[^a-zA-Z\\x5B-\\x60\\x7B-\\x7D]/, \"_\").replace(/[^a-zA-Z\\x5B-\\x60\\x7B-\\x7D\\d-]/g, \"-\").substr(0, 27-String(UID).length) + \"__\" + UID + \"^1\";\n// If no channel has been specified via development-user, connect to #global\nvar CHANNEL = __WEBPACK_IMPORTED_MODULE_15__define_user__[\"a\" /* CHAT_CHANNEL */];\n// Set via the USERHOST call (response 302/RPL_USERHOST) send after the numeric 001/RPL_WELCOME is received\nvar HOSTNAME = undefined;\n\n// Online users\nvar onlineUsers = [];\n\nvar failedAttempts = 1;\nvar disconnectionTimers = [5, 10, 15, 30];\nvar currentTimer = 0;\nvar timerInterval;\n\nvar postedMessages = [];\nvar toBePosted = [];\nvar connected = false;\nvar firstConnection = true;\n\n// Initialize saved preferences\ntry {\n    var persistantSettings = localStorage;\n} catch(e) {\n    console.warn(\"Local storage not available (either unsupported or permission denied) - user preferences will not be saved\");\n    var persistantSettings = {}\n}\nvar ignoredUsers = persistantSettings.chatIgnored ? persistantSettings.chatIgnored.split(\",\") : [];\n// Chat should start automaticcally scrolling as new messages come in\nvar chatAutoScroll = \"bottom\";\n\nvar sock;\n\n//DEBUG ONLY\nfunction getSock() {\n    return sock;\n}\n\n/**\n *  Parse messages sent by server\n *  @param data: Raw data sent by server\n *  @return: Array of parsed messages\n */\nfunction parseCommands(data) {\n    var msgs, portions;\n    // Split into individual messages (commands)\n    msgs = data.split(\"\\r\\n\");\n    // The presence of \\r\\n at the end causes an extra element, remove it\n    msgs.pop();\n    for (var i=0; i<msgs.length; i++) {\n        // Split into prefix, command, params, and trailer (does not represent RFC1459/2812 specs, only what's needed to parse)\n        portions = msgs[i].match(/(?::([^ ]+) )?([^ ]+)((?: (?:[^ :])[^ ]*)*)?(?: :(.+))?/);\n        msgs[i] = {};\n        msgs[i].origin = portions[1];\n        msgs[i].command = portions[2];\n        // Fill in params, if a trailer exists, append it (if there are no normal params, sure there's an array)\n        msgs[i].params = [];\n        if (portions[3]) {\n            msgs[i].params = msgs[i].params.concat(portions[3].trim().split(\" \"));\n        }\n        if (portions[4]) {\n            msgs[i].params.push(portions[4]);\n        }\n    }\n    return msgs;\n}\n\n/**\n *  Returns object of onlineUsers which has the given username\n *  @param username: Nick of user to search for\n *  @return: Found element of onlineUsers\n */\nfunction onlineUserWithName( username ) {\n    var res = __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.grep(onlineUsers, function(o){ return o.name==username.toLowerCase(); })[0];\n    if(!res) return false;\n    res.index = onlineUsers.indexOf(res);\n    return res;\n}\n\n/**\n *  When a user joins, make sure they're on the online list\n *  @param username: Nick of joining user\n */\nfunction addUser( username ) {\n    var portions, uid, userli;\n    var usernamesToIgnore = [\"Anonymous\", \"history\", \"ChatBot\"];\n    var ircIds = {\n        hoglahoo: 36921,\n        Nando: 49507,\n        machinelves: 2577,\n        LinkBot: 126938,\n        LFP6: 48290,\n        jnicol: 48166,\n        staryjess: 11775,\n        bro: 24263,\n        brourd: 24263\n    };\n\n    // Parse automatic suffix\n    portions = username.match(/(?:^(.+)(?:__(\\d+)\\^\\d+))|(.+)/);\n    // If userid is included, get it, if it's an IRC regular, get their userID from the list\n    uid = portions[2]|| ircIds[username] || 0;\n    // Get actual username\n    username = portions[1] || portions[3];\n    // Remove @ from Op's username\n    if (username[0] == \"@\") {\n        username = username.slice(1);\n    }\n\n    // If the user isn't online and isn't to be ignored, add it to the page in the right place and keep track of it\n    if (usernamesToIgnore.includes(username)) return;\n\n    if (!onlineUserWithName(username)) {\n        onlineUsers.push({ name: username.toLowerCase(), connections: 1, id: uid });\n        onlineUsers.sort(function(userA, userB){\n            if (userA.name < userB.name) return -1;\n            if (userA.name > userB.name) return 1;\n            return 0;\n        });\n\n        userli = '<li id=\"chat-userlist-user-{USERNAME_LOW}\" class=\"chat-userlist-user\"><a target=\"_blank\" href=\"http://{WORKBRANCH}/web/player/{UID}/\">{USERNAME}</a>{OPTS}</li>';\n        userli = userli.replace('{USERNAME_LOW}', username.toLowerCase())\n                       .replace('{USERNAME}', username)\n                       .replace('{UID}', uid)\n                       .replace(\"{OPTS}\", USERNAME !== \"Anonymous\" ? '<a class=\"chat-message-options\">&vellip;</a>' : \"\")\n                       .replace(\"{WORKBRANCH}\", __WEBPACK_IMPORTED_MODULE_15__define_user__[\"c\" /* WORKBRANCH */]);\n\n        // If there's a user ahead of this one in the array, insert it before that one in the list, else add to the end\n        if (onlineUsers[onlineUserWithName(username).index+1]) {\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()( userli ).insertBefore( \"li#chat-userlist-user-\" + onlineUsers[onlineUserWithName(username).index+1][\"name\"] );\n        } else {\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-users-list\").append(userli);\n        }\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-users-online\").html(parseInt(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-users-online\").html()) + 1);\n    } else {\n        onlineUsers[onlineUserWithName(username).index][\"connections\"]++;\n    }\n}\n\n/**\n *  When a user leaves, remove them from the list\n *  @param username: Nick of parting/quitting user\n */\nfunction removeUser( username ) {\n    var usernamesToIgnore = [\"Anonymous\", \"history\", \"ChatBot\"];\n\n    username = username.match(/(?:^(.+)(?:__(\\d+)\\^\\d+))|(.+)/);\n    // Get actual username\n    username = username[1] || username[3];\n    // Remove @ from Op's username\n    if (username[0] == \"@\") {\n        username = username.slice(1);\n    }\n\n    if (usernamesToIgnore.includes(username)) return;\n\n    if (onlineUsers[onlineUserWithName(username).index][\"connections\"] == 1) {\n        onlineUsers.splice(onlineUserWithName(username).index, 1);\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"li#chat-userlist-user-\" + username.toLowerCase()).remove();\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-users-online\").html(parseInt(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-users-online\").html()) - 1);\n    } else {\n        onlineUsers[onlineUserWithName(username).index][\"connections\"]--;\n    }\n}\n\n/**\n *  HTML escape regular expression\n *  @param search: Regex search stirng\n *  @param mod: Regex modifier string\n *  @return: Encoded regex\n */\nfunction encodedRegex( search ) {\n    var mod= '';\n    if (search.global) {mod += \"g\";}\n    if (search.multiline) {mod += \"m\";}\n    if (search.ignoreCase) {mod += \"i\";}\n\n    return new RegExp(search.source.replace(/&/g, \"&amp;\")\n                                   .replace(/</g, \"&lt;\")\n                                   .replace(/>/g, \"&gt;\")\n                                   .replace(/\"/g, \"&quot;\")\n                                   .replace(/'/g, \"&#x27;\")\n                                   .replace(/\\//g, \"&#x2F;\"),\n                      mod);\n}\n\n/**\n *  Add color to a username based on the UID in the message or font tags\n *  @param data: Username to be colored\n *  @param uid: UID to use for determining default color\n *  @param isAction: boolean indicating if the message is an action. May need to be reworked once Flash chat is dropped to better coincide with IRC specs\n *  @return: Formatted username HTML\n */\nfunction colorizeUser ( data, uid, isAction ) {\n    var colors = [\"#f39191\", \"#f39691\", \"#f39b91\", \"#f39f91\", \"#f3a491\", \"#f3a891\", \"#f3ad91\", \"#f3b191\", \"#f3b691\", \"#f3ba91\", \"#f3bf91\", \"#f3c491\", \"#f3c891\", \"#f3cd91\", \"#f3d191\", \"#f3d691\", \"#f3da91\", \"#f3df91\", \"#f3e491\", \"#f3e891\", \"#f3ed91\", \"#f3f191\", \"#f0f391\", \"#ebf391\", \"#e7f391\", \"#e2f391\", \"#ddf391\", \"#d9f391\", \"#d4f391\", \"#d0f391\", \"#cbf391\", \"#c7f391\", \"#c2f391\", \"#bef391\", \"#b9f391\", \"#b4f391\", \"#b0f391\", \"#abf391\", \"#a7f391\", \"#a2f391\", \"#9ef391\", \"#99f391\", \"#94f391\", \"#91f393\", \"#91f398\", \"#91f39c\", \"#91f3a1\", \"#91f3a5\", \"#91f3aa\", \"#91f3ae\", \"#91f3b3\", \"#91f3b7\", \"#91f3bc\", \"#f391ba\", \"#f391b6\", \"#f391b1\", \"#f391ad\", \"#f391a8\", \"#f391a4\", \"#f3919f\", \"#f3919b\", \"#f39196\"];\n    // Find escaped font tags, and replace them with a span and the hex color signified, if it's an action remove the tag\n    var customColored = data.replace(/&lt;font color=(?:&#x27;|\\&quot;)?(#[a-fA-F\\d]{6})(?:&#x27;|\\&quot;)?&gt;(.+)&lt;\\/font&gt;/i, isAction ? '$2':'<span style=\"color:$1;\">$2</span>')\n    // Construct span, if it's an action omit the coloring\n    return '<a target=\"_blank\" class=\"chat-message-user-link\" href=\"http://' + __WEBPACK_IMPORTED_MODULE_15__define_user__[\"c\" /* WORKBRANCH */] + '/web/player/' + uid + '/\"><span class=\"chat-message-user\" ' + (isAction ? '' : 'style=\"color:' + colors[uid % colors.length] + ';\"') + '>' + customColored + '</span></a>' + (!isAction ? ': ' : ' ');\n}\n\n/**\n *  Format the current time to a Flash-chat compatible timestamp\n *  @param time: Timestamp at beginning of message\n *  @return: Formatted timestamp\n */\nfunction formatTime( string ) {\n    // Construct date from string, get the time\n    return new Date(Date.parse(string)).toTimeString().replace(/(\\d{2}):(\\d{2}).+/, function(match, hour, minutes) {\n        // Format to non-millitary, add brackets\n        return \"[\" + (hour%12||12) + \":\" + minutes + \" \" + (hour > 11 ? \"PM\" : \"AM\") + \"]\";\n    });\n}\n\n/**\n *  Display a message in the chat window\n *  @param raw_msg: The contents of the privmsg to be posted\n *  @param isHistory: If true, it should be pushed at the top, as it is an older message (and may be coming in late)\n *\n */\nfunction postMessage( raw_msg, isHistory ) {\n    if (!isHistory && !connected) {\n        toBePosted.push(raw_msg);\n        return;\n    }\n    postedMessages.push(raw_msg.trim());\n\n    var parts, prefix, uid, name, time, isAction, message, classes = '';\n    // In a readable format, the regex looks like: ((UID)_(Display Name)_(Date/Time)_)?(Message)\n    // Time format: ShortDay ShortMonth Date HH:MM:SS Year UTC\n    parts = raw_msg.match(/((\\d+)_(.+)_((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) [0-3]?\\d [0-2]\\d(?::[0-6]\\d){2} \\d{4} UTC)_)?(.+)/);\n    prefix = parts[1];\n    uid = parts[2];\n    name = parts[3];\n    time = parts[4];\n    raw_msg = parts[5];\n    // TODO: In the future, remove this, it's due to Flash chat's pre-escaping before sending.\n    raw_msg = raw_msg.replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n    // TODO: Eventually remove, only needed for Flash chat compatible /me (once the Flash app is removed ACTION should be used)\n    raw_msg = raw_msg.replace(/<I>(.+)<\\/I>/g, '$1');\n    // TODO: Because of how chat works right now, we can only handle the inline styles,\n    // but some of the block-level pieces could be nice too once we have multiline messages (lists, blockquotes, and fences mostly).\n    // Also, the `code` should be styled (ie have a background color and maybe a different text color), and it currently isn't.\n    // Images are also disabled, as we currently don't have a way to format them properly.\n    raw_msg = md.renderInline(raw_msg);\n\n\n    // Don't show messages from user on ignore list\n    if ( ignoredUsers.includes(name) ){return;}\n\n    // For /me\n    // NOTE: May need to be reworked once Flash chat is dropped to better coincide with IRC specs\n    isAction = raw_msg.startsWith(\"ACTION \") || name ? name.match(/<I><FONT COLOR=\"#C0DCE7\">(.*)<\\/FONT><\\/I>/) : false;\n    raw_msg = raw_msg.replace(/ACTION /, '');\n\n    // Determine possible message classes\n    if (isAction) { classes += \" chat-message-action\"; }\n    if (!prefix) { classes += \" chat-message-system\"; }\n\n    // Fill template and post\n    message = '<li class=\"chat-message{MSG_CLASS}\"><div class=\"chat-message-content\">{USER}&lrm;<span class=\"chat-message-message\">{MESSAGE}</span><span class=\"chat-message-time\"> &lrm;{TIME}</span></div>{OPTS}</li>';\n    message = message.replace(\"{MSG_CLASS}\", classes)\n                     // TODO: Eventually remove the italicise replacement, only needed for Flash chat compatible /me (once the Flash app is removed ACTION should be used)\n                     .replace(\"{USER}\", prefix ? colorizeUser(mdSanitizer.renderInline(name.replace(/<I>(.+)<\\/I>/g, '$1')), uid, isAction) : '')\n                     .replace(\"{MESSAGE}\", raw_msg)\n                     .replace(\"{OPTS}\", USERNAME !== \"Anonymous\" ? '<a class=\"chat-message-options\">&vellip;</a>' : \"\")\n                     .replace(\"{TIME}\", prefix ? formatTime(time) : '');\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#global-chat-messages\").append(message);\n    setTimeout(function(){\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-global\").mCustomScrollbar(\"scrollTo\", chatAutoScroll, {callbacks: false});\n    }, 100);\n}\n\n/**\n * Adds the user to the current user's ignore list\n * @param user: Username to add to the ignore list\n */\nfunction ignoreUser(user) {\n    if (!ignoredUsers.includes(user)) {\n        ignoredUsers.push(user);\n        persistantSettings.chatIgnored = ignoredUsers;\n        postMessage(\"Ignored \" + user + \". To unignore this user, either use the options menu again (on a message or the user list) or type /unignore \" + user);\n    } else {\n        postMessage(user + \" has already been ignored\");\n    }\n}\n\n/**\n * Remove the user to the current user's ignore list\n * @param user: Username to remove from the ignore list, or `*` to clear the list entirely\n */\nfunction unignoreUser(user) {\n    if (user == \"*\") {\n        ignoredUsers = [];\n        postMessage(\"Unignored all\");\n    } else {\n        ignoredUsers.splice(ignoredUsers.indexOf(user), 1);\n        postMessage(\"Unignored \" + user);\n    }\n    persistantSettings.chatIgnored = ignoredUsers;\n}\n\n/**\n * Close report dialog and reset its contents\n */\nfunction closeReportDialog() {\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-dialog\").dialog(\"close\");\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-message\").val(\"\");\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-message\").parent().hide();\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-report, #report-ignore\").prop(\"checked\", false);\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-username\").val(\"\");\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-uid\").val(\"\");\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-time\").val(\"\");\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-offending-message\").val(\"\");\n}\n\n/**\n * Get username from the element a passed message options element is attached to,\n * be it a message or a user list item\n * @param target: Message options DOM element\n */\nfunction usernameFromOptions(target) {\n    var container = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(target).parent();\n    if (container.hasClass('chat-message')) {\n        return container.children(\".chat-message-content\").children(\".chat-message-user-link\").text();\n    } else if (container.hasClass('chat-userlist-user')) {\n        return container.children().eq(0).text();\n    }\n\n    throw new Error('Unhandled options target');\n}\n\n__WEBPACK_IMPORTED_MODULE_0_jquery___default()(document).ready(function() {\n    document.addEventListener(\"visibilitychange\", function() {\n        if('visible' === document.visibilityState)\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-global\").mCustomScrollbar(\"scrollTo\", chatAutoScroll, {callbacks: false});\n    });\n\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#minimization-triangle').click(toggleVisibility);\n\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#disconnect\").click(function() {\n        sock.close();\n    });\n\n    initSock();\n    // Initialize UI\n    // Initialize tabs\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()( \"#chat\" ).tabs({\n        activate: function( event, ui ) {\n            if (ui) {\n                if (ui.newPanel[0].id == \"chat-tab-global\") {\n                    setTimeout(function(){\n                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-global\").mCustomScrollbar(\"scrollTo\", chatAutoScroll, {callbacks: false});\n                    }, 100);\n                }\n            }\n        }\n    });\n    // Initialize scrollbar\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()( \"#chat-tabs\" ).children().mCustomScrollbar({\n        // No fancy animation, it makes it feel awkward\n        scrollInertia: 0,\n        mouseWheelPixels: 100,\n        callbacks: {\n            // The user has scrolled, so don't automatically move to the bottom on a new message\n            onScroll: function() {\n                if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-global\").css('display') !== 'none') {\n                    chatAutoScroll = this.mcs.top;\n                }\n            },\n            // We've hit the bottom, resume scrolling\n            onTotalScroll: function() {\n                if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-global\").css('display') !== 'none') {\n                    chatAutoScroll = \"bottom\";\n                }\n            }\n        }\n    });\n    // Fill out max length of message\n    // Breakdown - IRC server max: 324, timestamp: 28, underscores: 3, max length of username formatting (for /me, discounting the 3 characters for the command): 40, username: dynamic, UID: dynamic\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").prop(\"maxLength\", 253 - UID.toString().length - USERNAME.length);\n    // `[Report] ` is simply added at the beginning of messages\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-message\").prop(\"maxLength\", 324 - 9);\n\n    // Auto-resize chat input (adapted from https://www.impressivewebs.com/textarea-auto-resize/)\n    // Set up input and duplicated div\n    var input = __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#chat-input'),\n    hiddenDiv = '<div id=\"chat-input-hidden\"></div>',\n    content = null;\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(hiddenDiv).insertAfter(\"#chat-input\");\n    hiddenDiv = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input-hidden\");\n    input.css(\"overflow\", \"hidden\");\n\n    input.on('keydown keypress keyup', function() {\n        content = md.renderInline(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).val());\n        // Fill content apropriately\n        content = content.replace(/\\n/g, '<br>');\n        hiddenDiv.html(content + '');\n        // Determine height from duplicate div\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this).css('height', hiddenDiv.height());\n    });\n    // Message options menu\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tabs\").contextmenu({\n        delegate: \".chat-message-options\",\n        preventSelect: true,\n        autoTrigger: false,\n        addClass: \"message-options-menu\",\n        position: {my: \"right-10 center-15\"},\n        menu: [\n            {title: \"User Options\", cmd:\"header\", isHeader: true},\n            {title: \"Report User/Message\", cmd: \"report\"},\n            {title: \"Ignore User\", cmd: \"ignore\", disabled: function(event, ui) { return ignoredUsers.includes(usernameFromOptions(ui.target)) ? 'hide' : false }},\n            {title: \"Unignore User\", cmd: \"unignore\", disabled: function(event, ui){ return !ignoredUsers.includes(usernameFromOptions(ui.target)) ? 'hide' : false}},\n        ],\n        beforeOpen: function(event, ui) {\n          __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tabs\").contextmenu(\"setTitle\", \"header\", usernameFromOptions(ui.target));\n        },\n        select: function(event, ui) {\n            switch (ui.cmd) {\n                case \"report\":\n                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-report\").click();\n                    break;\n                case \"ignore\":\n                    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-ignore\").click();\n                    break;\n                case \"unignore\":\n                    unignoreUser(usernameFromOptions(ui.target));\n                    return;\n            }\n            if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(ui.target).parent().hasClass('chat-message')) {\n                var msg = __WEBPACK_IMPORTED_MODULE_0_jquery___default()(ui.target).parent().children(\".chat-message-content\");\n                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-username\").val(usernameFromOptions(ui.target));\n                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-uid\").val(msg.children(\".chat-message-user-link\").prop(\"href\").match(/player\\/(\\d+)/)[1]);\n                var time = msg.children(\".chat-message-time\").text().match(/(\\d+):(\\d+) ((AM)|(PM))/);\n                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-time\").val(\n                    // Using a random date, as we only need the time\n                    new Date(\"Jan 1 2000 \" + time[1] + \":\" + time[2] + \" \" + time[3])\n                    .toUTCString().match(/(?:\\d+:?)+ GMT$/)[0].replace(\"GMT\", \"UTC\")\n                );\n                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-offending-message\").val(msg.children(\".chat-message-message\").text());\n            } else if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(ui.target).parent().hasClass('chat-userlist-user')) {\n                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-username\").val(usernameFromOptions(ui.target));\n                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-uid\").val(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(ui.target).parent().children().eq(0).prop(\"href\").match(/player\\/(\\d+)/)[1]);\n            }\n\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-dialog\").dialog(\"open\");\n        }\n    });\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tabs\").on(\"click\", \".chat-message-options\", function() {\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tabs\").contextmenu(\"open\", __WEBPACK_IMPORTED_MODULE_0_jquery___default()(this));\n    });\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-dialog\").dialog({\n        dialogClass: \"report-dialog\",\n        autoOpen: false,\n        minHeight: 0,\n        width: \"100%\",\n        position: {at: 'center center-30px'}\n    });\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-report\").click(function() {\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-message\").parent().toggle();\n    });\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-cancel\").click(closeReportDialog);\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-submit\").click(function() {\n        if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-ignore\").prop(\"checked\") == true) {\n            ignoreUser(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-username\").val());\n        }\n\n        if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-report\").prop(\"checked\") == true) {\n            sock.send(\n                \"PRIVMSG #ops-notifications :[REPORT] Reporting {username} ({uid}) by {curr_username} ({curr_uid}).\\r\\n\"\n                .replace(\"{username}\", __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-username\").val())\n                .replace(\"{uid}\", __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-uid\").val())\n                .replace(\"{time}\", __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-time\").val() != '' ? \" Reported message sent at \" + __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-time\").val() : '')\n                .replace(\"{curr_username}\", USERNAME)\n                .replace(\"{curr_uid}\", UID)\n            );\n            if (__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-offending-message\").val() != '') {\n                sock.send(\"PRIVMSG #ops-notifications :[REPORTED MESSAGE] \" + __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-offending-message\").val() + \"\\r\\n\");\n            }\n            sock.send(\"PRIVMSG #ops-notifications :[REPORT REASON] \" + __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#report-message\").val() + \"\\r\\n\");\n        }\n\n        closeReportDialog();\n    })\n    // Key bindings\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#chat-input').keypress(function(e) {\n        if (e.which == 13) {\n            // Hit enter in chat\n            sendMessage(__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#chat-input').val());\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#chat-input').val('');\n            return false;\n        }\n    });\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#reconnect\").click(initSock);\n\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-users-btn\").click(function () {\n        document.getElementById('chat-users-btn').classList.add('hidden');\n        document.getElementById('chat-tab-btn').classList.remove('hidden');\n        document.getElementById('chat-tab-global').classList.add('hidden');\n        document.getElementById('chat-tab-users').classList.remove('hidden');\n    });\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-btn\").click(function () {\n        document.getElementById('chat-users-btn').classList.remove('hidden');\n        document.getElementById('chat-tab-btn').classList.add('hidden');\n        document.getElementById('chat-tab-global').classList.remove('hidden');\n        document.getElementById('chat-tab-users').classList.add('hidden');\n    });\n});\n\nfunction sendMessage(message){\n    var isAction = false;\n    var channel = \"#\" + CHANNEL;\n    // No posting as annon or if nothing has been actually posted\n    if (USERNAME !== \"Anonymous\" && message.trim() !== '') {\n        var message = message;\n        var post = true;\n        // Chat commands\n        if (message.startsWith(\"/\")) {\n            var post = false;\n            var command = message.match(/^\\/([^ ]+)/)[1];\n            try {\n                var params = message.match(/^\\/\\w+ (.+)/)[1];\n            } catch(e){}\n            switch (command) {\n                case \"help\":\n                    switch(params) {\n                        case \"me\":\n                            postMessage(\"/me: Posts message formatted as an action\")\n                            postMessage(\"Usage: /me <message>\");\n                            postMessage(\"Example: /me laughs\");\n                            break;\n                        case \"ignore\":\n                            postMessage(\"/ignore: Don't show messages from a particular user. Show currently ignored users with /ignore-list. Unignore user with /unignore.\")\n                            postMessage(\"Usage: /ignore <username>\");\n                            postMessage(\"Example: /ignore player1\");\n                            break;\n                        case \"ignore-list\":\n                            postMessage(\"/ignore-list: Shows currently ignored users. Ignore a user with /ignore. Unignore user with /unignore.\")\n                            postMessage(\"Usage: /ignore-list\");\n                            postMessage(\"Example: /ignore-list\");\n                            break;\n                        case \"unignore\":\n                            postMessage(\"/unignore: Shows messages from a user after being igored. Unignores all users when username is *. Ignore a user with /ignore. Show currently ignored users with /ignore-list.\")\n                            postMessage(\"Usage: /unignore <username>\");\n                            postMessage(\"Example: /unignore player1\");\n                            postMessage(\"Example: /unignore *\");\n                            break;\n                        default:\n                            postMessage(\"Available commands: help, me, ignore, ignore-list, unignore\");\n                            postMessage(\"Type /help <command> for information on individual commands\");\n                            postMessage(\"Example: /help me\");\n                            postMessage(\"Additional commands available via LinkBot (see the [wiki](http://eternawiki.org/wiki/index.php5/HELP) for more information)\");\n                            break;\n                    }\n                    break;\n                case \"me\":\n                    if (!params){ postMessage(\"Please include command parameters. Type /help me for usage instructions\"); break; }\n                    isAction = true;\n                    post = true;\n                    message = params;\n                    break;\n                case \"ignore\":\n                    if (!params){ postMessage(\"Please include command parameters. Type /help ignore for more usage instructions\"); break; }\n                    ignoreUser(params);\n                    break;\n                case \"ignore-list\":\n                    postMessage(\"Currently ignored users: \" + ignoredUsers.join(\", \"));\n                    break;\n                case \"unignore\":\n                    if (!params){ postMessage(\"Please include command parameters. Type /help unignore for more usage instructions\"); break; }\n                    unignoreUser(params)\n                    break;\n                default:\n                    postMessage(\"Invalid command. Type /help for more available commands\");\n                    break;\n            }\n        }\n\n        if (post) {\n            // So Flash chat doesn't break\n            message = message.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n            // Format time to work with Flash chat\n            // TODO: Could use a refactor, might be able to remove this necessity after Flash is removed)\n            if (isAction) {\n                message = UID + '_<I><FONT COLOR=\"#C0DCE7\">' + USERNAME + \"</FONT></I>_\" + new Date().toUTCString().replace(/(Mon|Tue|Wed|Thu|Fri|Sat|Sun), ([0-3]\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) ([0-2]\\d(?::[0-6]\\d){2}) GMT/, \"$1 $3 $2 $5 $4 UTC\") + \"_<I>\" + message + \"</I>\";\n            } else {\n                message = UID + \"_\" + USERNAME + \"_\" + new Date().toUTCString().replace(/(Mon|Tue|Wed|Thu|Fri|Sat|Sun), ([0-3]\\d) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) ([0-2]\\d(?::[0-6]\\d){2}) GMT/, \"$1 $3 $2 $5 $4 UTC\") + \"_\" + message;\n            }\n            sock.send(\"PRIVMSG \" + channel + \" :\" + message + \"\\r\\n\");\n            postMessage(message, false);\n        }\n    }\n}\n\nfunction initSock() {\n    clearInterval(timerInterval);\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#reconnect\").addClass(\"active\");\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#reconnect\").prop('onclick', null);\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading > #connecting\").show();\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading > #failed\").hide();\n\n    sock = new __WEBPACK_IMPORTED_MODULE_13_sockjs_client___default.a(\"https://irc.eternagame.org/chatws\", [], { transports: ['websocket', 'xhr-streaming', 'xdr-streaming', 'eventsource', 'iframe-eventsource', 'htmlfile', 'iframe-htmlfile', 'xhr-polling', 'xdr-polling', 'iframe-xhr-polling'] });\n    // Initial Chat Connection\n    sock.onopen = function() {\n        sock.send(\"NICK \" + NICK + \"\\r\\n\");\n        sock.send(\"USER \" + \"anon\" + \" 0 * :\" + USERNAME + \"\\r\\n\");\n    };\n\n    // Attempt to reconnect\n    sock.onclose = function() {\n        console.log(\"sock closed normally\");\n        onDisconnect();\n    }\n    sock.onerror = function() {\n        console.log(\"sock closed by an error\");\n        onDisconnect();\n    }\n    function onDisconnect() {\n        connected = false;\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#reconnect\").removeClass(\"active\");\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#global-chat-messages\").append(__WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"chat-loading\").detach());\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading\").show();\n        if (failedAttempts == 0) {\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading > #connecting\").show();\n            failedAttempts++;\n            initSock();\n        }\n        else {\n            currentTimer = disconnectionTimers[Math.min(failedAttempts - 1, 3)];\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading > #connecting\").hide();\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading > #failed\").show();\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading > #failed > #timer\").text(currentTimer);\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#reconnect\").show();\n            __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#chat-input').hide();\n            failedAttempts++;\n            clearInterval(timerInterval);\n            timerInterval = setInterval(updateTimer, 1000);\n        }\n    };\n    function updateTimer() {\n        currentTimer--;\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading > #failed > #timer\").text(currentTimer);\n        if (currentTimer <= 0) {\n            initSock();\n        }\n    }\n\n    sock.onmessage = function(e) {\n        var commands = parseCommands(e.data);\n        for (var i = 0; i < commands.length; i++) {\n            var cmd = commands[i];\n            switch (cmd.command) {\n                case \"PING\":\n                    sock.send(\"PONG :0.0.0.0\\r\\n\");\n                    break;\n                case \"433\":\n                    // Nick already used, try with fallback\n                    var nickNum = parseInt(NICK.match(/\\^(\\d+)/)[1]) + 1;\n                    NICK = NICK.replace(/\\^(\\d+)/, \"^\" + nickNum);\n                    sock.send(\"NICK \" + NICK + \"\\r\\n\");\n                    break;\n                case \"001\":\n                    // RPL_WELCOME\n                    console.log(\"Authenticated\");\n                    sock.send(\"USERHOST \" + NICK + \"\\r\\n\");\n                    sock.send(\"JOIN #\" + CHANNEL + \"\\r\\n\");\n                    break;\n                case \"302\":\n                    // RPL_USERHOST\n                    HOSTNAME = cmd.params[1].replace(NICK, '').match(/^\\*?=(?:\\+|-)(.*)$/)[1];\n                    break;\n                case \"JOIN\":\n                    failedAttempts = 0;\n                    var nick = cmd.origin.split(\"!\")[0];\n                    if (nick == NICK) {\n                        console.log(\"Joined \" + cmd.params[0]);\n                        console.log(\"Loading history...\");\n                        __WEBPACK_IMPORTED_MODULE_0_jquery___default.a.get(\"https://irc.eternagame.org/history\", function(data) {\n                            console.log(\"History recieved\");\n                            var messages = data.trim().split(\"\\n\");\n                            var firstNewMessage = 0;\n                            var j;\n                            for (j = 0; j < messages.length; j++)\n                                if (postedMessages.indexOf(messages[j].trim()) == -1) break;\n                            if (!firstConnection)\n                                postMessage(\"Reconnected to chat - Some messages might be missing if you were away for a long time\", true);\n                            for (; j < messages.length; j++) {\n                                postMessage(messages[j], true);\n                            }\n                            while (toBePosted.length) {\n                                postMessage(toBePosted.shift(), true);\n                            }\n                            firstConnection = false;\n                            connected = true;\n                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#reconnect\").hide();\n                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-loading\").hide();\n                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").show();\n                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"div#chat-loading\").detach();\n                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tabs\").show();\n                            setTimeout(function(){\n                                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tabs\").children().mCustomScrollbar(\"scrollTo\", \"bottom\", {callbacks: false});\n                            }, 100);\n                            if (USERNAME !== \"Anonymous\") {\n                                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").prop(\"disabled\", false);\n                            } else  {\n                                __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").attr(\"placeholder\", \"Please log in to chat\")\n                            }\n                        });\n                    } else {\n                        addUser(cmd.origin.split(\"!\")[0]);\n                    }\n                    break;\n                case \"331\":\n                case \"332\":\n                    // Topic, display?\n                    break;\n                // Part and quit both need to be handled the same way in our case - a user left the room\n                case \"PART\":\n                case \"QUIT\":\n                    removeUser(cmd.origin.split(\"!\")[0]);\n                    break;\n                case \"353\":\n                    var users = cmd.params[3].trim().split(\" \");\n                    for (var j = 0; j < users.length; j++) {\n                        addUser(users[j]);\n                    }\n                    break;\n                case \"366\":\n                    // Signifies end of names, don't think this is needed?\n                    break;\n                case \"NOTICE\":\n                case \"PRIVMSG\":\n                    postMessage(cmd.params[1], false);\n                    break;\n                case \"MODE\":\n                    // Check if user has been banned, if so disable input and notify in chat\n                    // TODO: Handle extended bans\n                    // TODO: Handle multiple modes being set/unset at once\n                    if (cmd.params[1] == \"+b\") {\n                        if ((NICK + '!' + HOSTNAME).match(new RegExp(cmd.params[2].replace(/\\*/g, \".+\").replace(\"^\", \"\\\\^\")))) {\n                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").prop('disabled', true);\n                            postMessage(\"You have been banned from chat\");\n                        }\n                    } else if (cmd.params[1] == \"-b\") {\n                        if ((NICK + '!' + HOSTNAME).match(new RegExp(cmd.params[2].replace(/\\*/g, \".+\").replace(\"^\", \"\\\\^\")))) {\n                            __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").prop('disabled', false);\n                            postMessage(\"You are now allowed to post in chat\");\n                        }\n                    }\n                    break;\n                // Check if user has been kicked, if so disable input and notify in chat, if other user remove them from online list\n                case \"KICK\":\n                    if (cmd.params[1] == NICK) {\n                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").prop('disabled', true);\n                        postMessage(\"You have been kicked from chat\" + (cmd.params[2] ? \" - \" + cmd.params[2] : ''));\n                    } else {\n                        removeUser(cmd.params[1]);\n                    }\n                    break;\n                case \"404\":\n                    // Can't post message\n                    if (cmd.params[2].startsWith(\"You are banned\")) {\n                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").prop('disabled', true);\n                        postMessage(\"You are not allowed to post in chat\");\n                    }\n                    break;\n                case \"474\":\n                    // Can't join channel\n                    if (cmd.params[1] == \"Cannot join channel (+b)\") {\n                        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-input\").prop('disabled', true);\n                        postMessage(\"You have been banned from chat\");\n                    }\n                    break;\n                // Ignore information stuff\n                case \"002\":\n                case \"003\":\n                case \"004\":\n                case \"005\":\n                case \"251\":\n                case \"252\":\n                case \"253\":\n                case \"254\":\n                case \"255\":\n                case \"265\":\n                case \"266\":\n                case \"333\":\n                // Topic set by _ at _\n                case \"422\":\n                    break;\n\n                default:\n                    console.log(\"[Chat] Unhandled command recieved. Command: \" + cmd.command + \" Origin: \" + cmd.origin + \" Params: \" + cmd.params);\n            }\n        }\n\n    };\n}\n\nwindow.addEventListener(\"message\", screenshotHook, false);\nwindow.addEventListener(\"message\", scrollHook, false);\n\nfunction screenshotHook(event) {\n    if (event.origin.match(/https?:\\/\\/((127.0.0.1)|(localhost)|((.*\\.)?eternagame\\.org)|((.*\\.?)eternadev\\.org))/).length !== 0)\n        if (event.data.type === 'chat-message')\n            sendMessage(event.data.content);\n}\n\nfunction scrollHook(event){\n    if (event.origin.match(/https?:\\/\\/((127.0.0.1)|(localhost)|((.*\\.)?eternagame\\.org)|((.*\\.?)eternadev\\.org))/).length !== 0) {\n        if (event.data.type === 'chat-scroll') {\n           setTimeout(function(){\n               __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-global\").mCustomScrollbar(\"scrollTo\", \"bottom\", {callbacks: false});\n           }, 100);\n           chatAutoScroll = \"bottom\";\n        }\n    }\n}\n\nfunction toggleVisibility(){\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#minimization-triangle').toggleClass('flipped');\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('#chat-content').fadeToggle('fast');\n    __WEBPACK_IMPORTED_MODULE_0_jquery___default()('.tab').fadeToggle('fast');\n    if(__WEBPACK_IMPORTED_MODULE_0_jquery___default()('#chat-content').css('display') !== 'none')\n        __WEBPACK_IMPORTED_MODULE_0_jquery___default()(\"#chat-tab-global\").mCustomScrollbar(\"scrollTo\", 'bottom');\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/chat.js\n");

/***/ }),

/***/ "./src/js/define-user.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CHAT_CHANNEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return CURRENT_USER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return WORKBRANCH; });\nvar CURRENT_USER = {}\nvar CHAT_CHANNEL = \"global\";\nvar WORKBRANCH = \"eternagame.org\";\n\nlocation.search.slice(1).split(\"&\").forEach(function(item){\n    var param = item.split(\"=\")[0];\n    if (param == \"name\" || param == \"uid\") {\n        CURRENT_USER[param] = decodeURIComponent(item.split(\"=\")[1]);\n    } else if (param == \"channel\") {\n        CHAT_CHANNEL = decodeURIComponent(item.split(\"=\")[1]);\n    } else if (param == \"workbranch\") {\n        WORKBRANCH = decodeURIComponent(item.split(\"=\")[1]);\n    }\n});\nif (CURRENT_USER.name === undefined || CURRENT_USER.uid === undefined) {\n    CURRENT_USER = undefined;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvZGVmaW5lLXVzZXIuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvZGVmaW5lLXVzZXIuanM/OTBjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgQ1VSUkVOVF9VU0VSID0ge31cbnZhciBDSEFUX0NIQU5ORUwgPSBcImdsb2JhbFwiO1xudmFyIFdPUktCUkFOQ0ggPSBcImV0ZXJuYWdhbWUub3JnXCI7XG5cbmxvY2F0aW9uLnNlYXJjaC5zbGljZSgxKS5zcGxpdChcIiZcIikuZm9yRWFjaChmdW5jdGlvbihpdGVtKXtcbiAgICB2YXIgcGFyYW0gPSBpdGVtLnNwbGl0KFwiPVwiKVswXTtcbiAgICBpZiAocGFyYW0gPT0gXCJuYW1lXCIgfHwgcGFyYW0gPT0gXCJ1aWRcIikge1xuICAgICAgICBDVVJSRU5UX1VTRVJbcGFyYW1dID0gZGVjb2RlVVJJQ29tcG9uZW50KGl0ZW0uc3BsaXQoXCI9XCIpWzFdKTtcbiAgICB9IGVsc2UgaWYgKHBhcmFtID09IFwiY2hhbm5lbFwiKSB7XG4gICAgICAgIENIQVRfQ0hBTk5FTCA9IGRlY29kZVVSSUNvbXBvbmVudChpdGVtLnNwbGl0KFwiPVwiKVsxXSk7XG4gICAgfSBlbHNlIGlmIChwYXJhbSA9PSBcIndvcmticmFuY2hcIikge1xuICAgICAgICBXT1JLQlJBTkNIID0gZGVjb2RlVVJJQ29tcG9uZW50KGl0ZW0uc3BsaXQoXCI9XCIpWzFdKTtcbiAgICB9XG59KTtcbmlmIChDVVJSRU5UX1VTRVIubmFtZSA9PT0gdW5kZWZpbmVkIHx8IENVUlJFTlRfVVNFUi51aWQgPT09IHVuZGVmaW5lZCkge1xuICAgIENVUlJFTlRfVVNFUiA9IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHtDSEFUX0NIQU5ORUwsIENVUlJFTlRfVVNFUiwgV09SS0JSQU5DSH1cblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2pzL2RlZmluZS11c2VyLmpzXG4vLyBtb2R1bGUgaWQgPSAuL3NyYy9qcy9kZWZpbmUtdXNlci5qc1xuLy8gbW9kdWxlIGNodW5rcyA9IDEiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/define-user.js\n");

/***/ }),

/***/ "./src/js/polyfills.js":
/***/ (function(module, exports) {

eval("// String.startsWith\nif (!String.prototype.startsWith) {String.prototype.startsWith = function(s, p){p = p || 0;return this.substr(p, s.length) === s;};}\n// Array.includes\nif (!Array.prototype.includes) {Array.prototype.includes=function(s){'use strict';var O=Object(this);var len=parseInt(O.length,10)||0;if(len===0){return false;}var n=parseInt(arguments[1],10)||0;var k;if(n>=0){k=n;}else{k=len+n;if(k<0){k=0;}}var c;while(k<len){c=O[k];if(s===c||(s!==s&&c!==c)){return true;}k++;}return false;};}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvcG9seWZpbGxzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2pzL3BvbHlmaWxscy5qcz84MDc3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFN0cmluZy5zdGFydHNXaXRoXG5pZiAoIVN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aCkge1N0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aCA9IGZ1bmN0aW9uKHMsIHApe3AgPSBwIHx8IDA7cmV0dXJuIHRoaXMuc3Vic3RyKHAsIHMubGVuZ3RoKSA9PT0gczt9O31cbi8vIEFycmF5LmluY2x1ZGVzXG5pZiAoIUFycmF5LnByb3RvdHlwZS5pbmNsdWRlcykge0FycmF5LnByb3RvdHlwZS5pbmNsdWRlcz1mdW5jdGlvbihzKXsndXNlIHN0cmljdCc7dmFyIE89T2JqZWN0KHRoaXMpO3ZhciBsZW49cGFyc2VJbnQoTy5sZW5ndGgsMTApfHwwO2lmKGxlbj09PTApe3JldHVybiBmYWxzZTt9dmFyIG49cGFyc2VJbnQoYXJndW1lbnRzWzFdLDEwKXx8MDt2YXIgaztpZihuPj0wKXtrPW47fWVsc2V7az1sZW4rbjtpZihrPDApe2s9MDt9fXZhciBjO3doaWxlKGs8bGVuKXtjPU9ba107aWYocz09PWN8fChzIT09cyYmYyE9PWMpKXtyZXR1cm4gdHJ1ZTt9aysrO31yZXR1cm4gZmFsc2U7fTt9XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvanMvcG9seWZpbGxzLmpzXG4vLyBtb2R1bGUgaWQgPSAuL3NyYy9qcy9wb2x5ZmlsbHMuanNcbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/polyfills.js\n");

/***/ })

},["./src/js/chat.js"]);